{
  "version": 3,
  "file": "c3_renderers.js",
  "sourceRoot": "/",
  "sources": [
    "c3_renderers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\"), require(\"c3\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\", \"c3\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery, c3\n\ncallWithJQuery ($, c3) ->\n\n    makeC3Chart = (chartOpts = {}) -> (pivotData, opts) ->\n        defaults =\n            localeStrings: {vs: \"vs\", by: \"by\"}\n            c3: {}\n\n        opts = $.extend(true, {}, defaults, opts)\n        opts.c3.size ?= {}\n        opts.c3.size.width ?= window.innerWidth / 1.4\n        opts.c3.size.height ?= window.innerHeight / 1.4 - 50\n        chartOpts.type ?= \"line\"\n        chartOpts.horizontal ?= false\n        chartOpts.stacked ?= false\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n\n        headers = (h.join(\"-\") for h in colKeys)\n        rotationAngle = 0\n\n        fullAggName = pivotData.aggregatorName\n        if pivotData.valAttrs.length\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n\n        if chartOpts.type == \"scatter\"\n            scatterData = x:{}, y:{}, t:{}\n            attrs = pivotData.rowAttrs.concat(pivotData.colAttrs)\n            vAxisTitle = attrs[0] ? \"\"\n            hAxisTitle = attrs[1] ? \"\"\n            groupByTitle = attrs.slice(2).join(\"-\")\n            titleText = vAxisTitle\n            titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n            for rowKey in rowKeys\n                for colKey in colKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        vals = rowKey.concat(colKey)\n                        series = vals.slice(2).join(\"-\")\n                        if series == \"\" then series = \"series\"\n                        scatterData.x[series] ?= []\n                        scatterData.y[series] ?= []\n                        y = vals[0] ? 0\n                        x = vals[1] ? 0\n                        scatterData.y[series].push y\n                        scatterData.x[series].push x\n                        scatterData.t[series] ?= {}\n                        scatterData.t[series][x] ?= {}\n                        scatterData.t[series][x][y] = agg.value()\n        else\n            numCharsInHAxis = 0\n            for x in headers\n                numCharsInHAxis += x.length\n            if numCharsInHAxis > 50\n                rotationAngle = 45\n\n            columns = []\n            for rowKey in rowKeys\n                rowHeader = rowKey.join(\"-\")\n                row = [if rowHeader == \"\" then fullAggName else rowHeader]\n                for colKey in colKeys\n                    val = parseFloat  pivotData.getAggregator(rowKey, colKey).value()\n                    if isFinite(val)\n                        row.push(val)\n                    else\n                        row.push(null)\n                columns.push row\n\n            vAxisTitle = fullAggName\n\n            if chartOpts.horizontal\n                hAxisTitle = pivotData.rowAttrs.join(\"-\")\n                groupByTitle = pivotData.colAttrs.join(\"-\")\n            else\n                hAxisTitle = pivotData.colAttrs.join(\"-\")\n                groupByTitle = pivotData.rowAttrs.join(\"-\")\n            titleText = fullAggName\n            titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n        title = $(\"<p>\", {style: \"text-align: center; font-weight: bold\"})\n        title.text(titleText)\n\n        formatter = pivotData.getAggregator([], []).format\n\n        params =\n            axis:\n                rotated: chartOpts.horizontal\n                y:\n                    label: vAxisTitle\n                    tick: {}\n                x:\n                    label: hAxisTitle\n                    tick:\n                        rotate: rotationAngle\n                        multiline: false\n            data:\n                type: chartOpts.type\n                order: null\n            tooltip:\n                grouped: false\n            color:\n                pattern: [ \"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\",\n                           \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\",\n                           \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\",\n                           \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\",\n                           \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\" ]\n\n\n        params = $.extend(true, {}, params, opts.c3)\n        if chartOpts.type == \"scatter\"\n            xs = {}\n            numSeries = 0\n            dataColumns = []\n            for s of scatterData.x\n                numSeries += 1\n                xs[s] = s+\"_x\"\n                dataColumns.push [s+\"_x\"].concat(scatterData.x[s])\n                dataColumns.push [s].concat(scatterData.y[s])\n            params.data.xs = xs\n            params.data.columns = dataColumns\n            params.axis.x.tick = fit: false\n            if numSeries == 1\n                params.legend = show: false\n            params.tooltip.format =\n                title: -> fullAggName\n                name: -> \"\"\n                value: (a,b,c,d,e) ->\n                    {name: series, value: y, x} = e[0]\n                    formatter(scatterData.t[series][x][y])\n        else\n            params.axis.x.type= 'category'\n            params.axis.y.tick.format ?= (v) -> formatter(v)\n            params.tooltip.format = value: (v) -> formatter(v)\n\n            if chartOpts.horizontal\n                categories = (c.shift() for c in columns)\n                if categories.length == 1 and categories[0] == fullAggName\n                    categories = [\"\"]\n                params.axis.x.categories = categories\n                if headers.length == 1 and headers[0] == \"\"\n                    headers = [fullAggName]\n                columns.unshift(headers)\n                params.data.rows = columns\n            else\n                params.axis.x.categories = headers\n                params.data.columns = columns\n\n\n        if chartOpts.stacked\n            if chartOpts.horizontal\n                params.data.groups = [x.join(\"-\") for x in colKeys]\n            else\n                params.data.groups = [x.join(\"-\") for x in rowKeys]\n\n        renderArea = $(\"<div>\", style: \"display:none;\").appendTo $(\"body\")\n        result = $(\"<div>\").appendTo renderArea\n        params.bindto = result[0]\n        c3.generate params\n        result.detach()\n        renderArea.remove()\n        return $(\"<div>\").append title, result\n\n    $.pivotUtilities.c3_renderers =\n        \"Horizontal Bar Chart\": makeC3Chart(type: \"bar\", horizontal: true)\n        \"Horizontal Stacked Bar Chart\": makeC3Chart(type: \"bar\", stacked: true, horizontal: true)\n        \"Bar Chart\": makeC3Chart(type: \"bar\")\n        \"Stacked Bar Chart\": makeC3Chart(type: \"bar\", stacked: true)\n        \"Line Chart\": makeC3Chart()\n        \"Area Chart\": makeC3Chart(type: \"area\", stacked: true)\n        \"Scatter Chart\": makeC3Chart(type: \"scatter\")\n"
  ]
}